import { ReactElement } from 'react';
export declare class Emitter<U extends string, T> {
    private listeners;
    on(eventName: U, callback: (data: T) => void): void;
    off(eventName: U, callback: (data: T) => void): void;
    emit(eventName: U, data: Partial<T>): void;
}
export declare enum ModalEvents {
    AddModal = "add-modal",
    RemoveModal = "remove-modal",
    ModalVisibilityChanged = "modal-visibility-changed"
}
export interface ModalWindow {
    icon?: ReactElement;
    title: string;
    hasButton: boolean;
    id: string;
}
export declare const modals: Emitter<ModalEvents, ModalWindow>;
