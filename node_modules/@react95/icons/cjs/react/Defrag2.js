"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defrag2Data = exports.Defrag2 = void 0;
var _react = _interopRequireDefault(require("react"));
var _excluded = ["variant"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
var Defrag2_32x32_4 = function Defrag2_32x32_4(props) {
  return /*#__PURE__*/_react["default"].createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    width: "32",
    height: "32",
    shapeRendering: "crispEdges",
    viewBox: "0 -0.5 32 32"
  }, props), /*#__PURE__*/_react["default"].createElement("path", {
    stroke: "gray",
    d: "M4 15h26M3 16h1m25 0h1M2 17h1m25 0h2M1 18h1m25 0h3M1 19h1m25 0h3M1 20h1m25 0h3M1 21h1m7 0h8m10 0h3M1 22h1m3 0h4m8 0h4m6 0h3M1 23h1m25 0h3M1 24h1m25 0h3M1 25h1m25 0h3M1 26h1m25 0h2M1 27h27"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    stroke: "silver",
    d: "M4 16h25M3 17h25M3 19h24M3 20h19m2 0h3M3 21h6m8 0h5m2 0h3M3 22h2m16 0h6M3 23h2m16 0h6M3 24h6m8 0h10M3 25h24M3 26h24"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    stroke: "#000",
    d: "M30 16h1m-1 1h1m-1 1h1m-1 1h1m-1 1h1m-1 1h1M9 22h8m13 0h1M9 23h8m13 0h1m-1 1h1m-1 1h1m-2 1h1m-2 1h1M2 28h26"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    stroke: "#fff",
    d: "M2 18h25M2 19h1m-1 1h1m-1 1h1m-1 1h1m-1 1h1m2 0h4m8 0h4M2 24h1m6 0h8M2 25h1m-1 1h1"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    stroke: "red",
    d: "M22 20h2m-2 1h2"
  }));
};
var Defrag2_16x16_4 = function Defrag2_16x16_4(props) {
  return /*#__PURE__*/_react["default"].createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    width: "16",
    height: "16",
    shapeRendering: "crispEdges",
    viewBox: "0 -0.5 16 16"
  }, props), /*#__PURE__*/_react["default"].createElement("path", {
    stroke: "gray",
    d: "M2 5h13M1 6h1m12 0h1M0 7h1m12 0h2M0 8h1m4 0h4m4 0h2M0 9h1m1 0h3m4 0h3m1 0h2M0 10h1m12 0h2M0 11h1m12 0h2M0 12h14"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    stroke: "silver",
    d: "M2 6h12M1 8h4m4 0h2m1 0h1M1 9h1m10 0h1M1 10h4m4 0h4M1 11h12"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    stroke: "#000",
    d: "M15 6h1m-1 1h1m-1 1h1M5 9h4m6 0h1m-1 1h1m-1 1h1m-2 1h1M1 13h13"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    stroke: "#fff",
    d: "M1 7h12m-8 3h4"
  }), /*#__PURE__*/_react["default"].createElement("path", {
    stroke: "red",
    d: "M11 8h1"
  }));
};
var defrag2Data = exports.defrag2Data = {
  '32x32_4': Defrag2_32x32_4,
  '16x16_4': Defrag2_16x16_4
};
var Defrag2 = exports.Defrag2 = function Defrag2(_ref) {
  var _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? '32x32_4' : _ref$variant,
    rest = _objectWithoutProperties(_ref, _excluded);
  var Svg = defrag2Data[variant];
  return /*#__PURE__*/_react["default"].createElement(Svg, rest);
};